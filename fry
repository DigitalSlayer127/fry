#!/bin/sh

# Deep-fries your images. I am no longer sorry.

depth="0"
stdin=False
err() { echo "Usage:
	fry [-i] [-d DEPTH] [input] [output]
	Options:
	-d: Depth of frying
	-i: Use standard input and output file" && exit 1 ;}

while getopts "cd:in" o; do case "${o}" in
	d) depth="${OPTARG}" ;; # Depth of frying
	i) stdin=True && clip=False ;; #Read from stdin
	*) printf "Invalid option: -%s\\n" "$OPTARG" && err ;;
esac done

shift $((OPTIND - 1))

file="$1"

jpeg() {
	magick - -quality 7 jpeg:- | magick - png:-
}

panfry() {
	magick - -posterize 6 -level 100 -sharpen 5x5 -gamma 1.5 -quality 6 jpeg:- | magick - png:-
}

deepfry() {
	magick - -quality 5 -resize 50% jpeg:- | magick - -posterize 5 -level 155 -sharpen 15x15 -gamma 2 -resize 200% png:-
}

dankfry() {
	magick - -quality 5 -resize 25% jpeg:- | magick - -posterize 4 -level 170 -sharpen 25x25 -gamma 0.5 -resize 400% png:-
}

case "$depth" in
	0)  [ -z $1 ] && [ $stdin = False ] && xclip -selection clipboard -o | jpeg | xclip -selection clipboard -t image/png ;;
	1)  [ -z $1 ] && [ $stdin = False ] && xclip -selection clipboard -o | panfry | xclip -selection clipboard -t image/png ;;
	2)  [ -z $1 ] && [ $stdin = False ] && xclip -selection clipboard -o | deepfry | xclip -selection clipboard -t image/png ;;
	3)  [ -z $1 ] && [ $stdin = False ] && xclip -selection clipboard -o | dankfry | xclip -selection clipboard -t image/png ;;
	*) printf "Can't go that deep!\n" && err ;;
esac

case "$depth" in
	0) [ $stdin = False ] && [ $(echo $1 | wc -m) -gt 1 ] && cat $1 | jpeg > "$2" ;;
	1) [ $stdin = False ] && [ $(echo $1 | wc -m) -gt 1 ] && cat $1 | panfry > "$2" ;;
	2) [ $stdin = False ] && [ $(echo $1 | wc -m) -gt 1 ] && cat $1 | deepfry > "$2" ;;
	3) [ $stdin = False ] && [ $(echo $1 | wc -m) -gt 1 ] && cat $1 | dankfry > "$2" ;;
	*) printf "Can't go that deep!" && err ;;
esac

case "$depth" in
	0) [ $stdin = True ] && cat /dev/stdin | jpeg > "$1" ;;
	1) [ $stdin = True ] && cat /dev/stdin | panfry > "$1" ;;
	2) [ $stdin = True ] && cat /dev/stdin | deepfry > "$1" ;;
	3) [ $stdin = True ] && cat /dev/stdin | dankfry > "$1" ;;
	*) printf "Can't go that deep!" && err ;;
esac

# [ $clip = False ] && [ -e $1 ] || echo "Invalid input" && err
